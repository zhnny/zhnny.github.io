<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Git的快速使用</title>
    <url>/2022/03/06/Git%E7%9A%84%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="1-Git简介"><a href="#1-Git简介" class="headerlink" title="1. Git简介"></a>1. Git简介</h2><ul>
<li><p>Git最初是Linus花了两周时间自己用C写了一个分布式版本控制系统</p>
</li>
<li><p>特点：</p>
<ul>
<li>分布式，每一个主机都有完整版本库</li>
<li>开源免费性能好</li>
</ul>
<p>注：类似GitHub这种中心环境的存在是为了交换方便，换言之，即使不存在这种中心设备，Git也是可以正常使用的</p>
</li>
</ul>
<h2 id="2-Git安装"><a href="#2-Git安装" class="headerlink" title="2. Git安装"></a>2. Git安装</h2><p>笔者使用OS是CentOS Linux，Git的安装命令为</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure>

<h2 id="3-创建仓库"><a href="#3-创建仓库" class="headerlink" title="3. 创建仓库"></a>3. 创建仓库</h2><p>创建新文件夹</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir daily-scripts</span><br><span class="line">cd daily-scripts/</span><br></pre></td></tr></table></figure>

<p>初始化Git仓库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>

<p>添加文件到目录中</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv ../POI聚类分析.ipynb POI聚类分析.ipynb </span><br></pre></td></tr></table></figure>

<p>添加文件到仓库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add POI聚类分析.ipynb</span><br></pre></td></tr></table></figure>

<p>添加文件夹</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add jupyter-note-book/</span><br></pre></td></tr></table></figure>

<p>添加多个文件（夹）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add jupyter-note-book/ python-file/</span><br></pre></td></tr></table></figure>

<p>注意：Git是不允许提交一个空的目录到版本库上的</p>
<p>提交文件到仓库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;Add a file POI聚类分析.ipynb&quot;</span><br></pre></td></tr></table></figure>

<p>解释：</p>
<ul>
<li><p>Git的工作流如图所示：</p>
<p><img src="https://s2.loli.net/2022/02/28/BDz5JSbxjw8AGTF.png" alt="img"></p>
<p>第一次add命令将改动添加到缓冲区，第二次的commit命令将改动添加到版本库中</p>
</li>
<li><p>- m “…” 表示此次提交的版本的描述信息</p>
</li>
</ul>
<h2 id="4-添加远程库"><a href="#4-添加远程库" class="headerlink" title="4. 添加远程库"></a>4. 添加远程库</h2><p>笔者在GitHub上创建了一个仓库daily-scripts</p>
<p>根据Github的提示，可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git remote add origin https://github.com/zhnny/daily-scripts.git</span><br></pre></td></tr></table></figure>

<p>下一步，就可以把本地库的所有内容推送到远程库上：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>

<p>注意：第一次push的时候，提示输入用户名和密码，需要去GitHub的Settings中去生成Token</p>
<p>关于连接远程仓库使用的ssh key和Token，具体可参考博客[<a href="https://www.cnblogs.com/chenyablog/p/15397548.html">GitHub使用Personal access token</a>]</p>
<p>push完成后，GitHub中对应的repo中就有一个相同的仓库了</p>
<p>GitHub上的仓库既可以作为备份，又可以让其他人通过该仓库来协作</p>
<h2 id="5-克隆远程库"><a href="#5-克隆远程库" class="headerlink" title="5. 克隆远程库"></a>5. 克隆远程库</h2><p>克隆GitHub上的仓库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/zhnny/PyTorch-Learning-Note.git</span><br></pre></td></tr></table></figure>

<p>Git支持多种协议，包括<code>https</code>，但<code>ssh</code>协议速度最快</p>
<p>ssh协议需要设置公钥，https不需要，但是https在push时要Token</p>
<p>以下步骤将引导完成生成SSH密钥并将公钥添加到GitHub帐户（参考<a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/checking-for-existing-ssh-keys">Checking for existing SSH keys - GitHub Docs</a>）</p>
<ul>
<li><p>cd到home目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看是否存在密钥（如果存在密钥可以上传）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls .ssh/</span><br></pre></td></tr></table></figure>
</li>
<li><p>生成密钥(使用GitHub电子邮箱替换)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure>

<p>接下来一直默认就好，除非你知道你在做什么</p>
</li>
<li><p>复制公钥</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat .ssh/id_ed25519.pub</span><br></pre></td></tr></table></figure>
</li>
<li><p>将公钥粘贴到你的GitHub账户Settings中的SSH keys中</p>
<p><img src="https://s2.loli.net/2022/02/28/vXpe5N2LQUzYbHP.png" alt="image-20220228215435546"></p>
</li>
</ul>
<p>完成ssh key配置后就可以使用ssh协议克隆repo</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone git@github.com:zhnny/PyTorch-Learning-Note.git</span><br></pre></td></tr></table></figure>

<p>push时也可以直接使用ssh协议</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git push git@github.com:zhnny/PyTorch-Learning-Note.git</span><br></pre></td></tr></table></figure>

<p>而不必再使用Token</p>
<h2 id="6-参考资料"><a href="#6-参考资料" class="headerlink" title="6. 参考资料"></a>6. 参考资料</h2><p><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/checking-for-existing-ssh-keys">Checking for existing SSH keys - GitHub Docs</a></p>
<p><a href="https://www.liaoxuefeng.com/wiki/896043488029600/898732792973664">从远程库克隆 - 廖雪峰的官方网站 (liaoxuefeng.com)</a></p>
<p><a href="https://www.cnblogs.com/chenyablog/p/15397548.html">GitHub使用Personal access token - 小旭2021 - 博客园 (cnblogs.com)</a></p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/03/06/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>基于Hexo的GitHub Pages个人博客搭建</title>
    <url>/2022/03/07/%E5%9F%BA%E4%BA%8EHexo%E7%9A%84GitHub%20Pages%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="1-创建一个个人主页仓库"><a href="#1-创建一个个人主页仓库" class="headerlink" title="1.创建一个个人主页仓库"></a>1.创建一个个人主页仓库</h2><p>仓库命名最好为<code>github账户名.github.io</code>，这样可以通过<code>https://github账户名.github.io</code>访问</p>
<p><img src="https://s2.loli.net/2022/03/06/5EZRBIJmxXNoViM.png" alt="image-20220306152739542"></p>
<h2 id="2-安装Hexo"><a href="#2-安装Hexo" class="headerlink" title="2.安装Hexo"></a>2.安装Hexo</h2><p>此处采用局部安装：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">npm install hexo</span></span><br></pre></td></tr></table></figure>



<h2 id="3-初始化Hexo"><a href="#3-初始化Hexo" class="headerlink" title="3.初始化Hexo"></a>3.初始化Hexo</h2><p>创建一个新的文件夹：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash"><span class="built_in">mkdir</span> blog</span></span><br></pre></td></tr></table></figure>

<p>初始化Hexo</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">npx hexo init blog/</span></span><br></pre></td></tr></table></figure>

<p>进入文件夹并安装Hexo相关组件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash"><span class="built_in">cd</span> blog/</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">npm install</span></span><br></pre></td></tr></table></figure>



<h2 id="4-测试本地Hexo服务"><a href="#4-测试本地Hexo服务" class="headerlink" title="4.测试本地Hexo服务"></a>4.测试本地Hexo服务</h2><p>在本地运行Hexo</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">npx hexo server</span></span><br></pre></td></tr></table></figure>

<p>浏览器访问<code>http://localhost:4000</code>，出现以下界面即为启动成功：</p>
<p><img src="https://s2.loli.net/2022/03/06/lnfAWDyKOpwUg1s.png" alt="image-20220306154058992"></p>
<h2 id="5-部署到GitHub"><a href="#5-部署到GitHub" class="headerlink" title="5.部署到GitHub"></a>5.部署到GitHub</h2><p>安装Git部署工具：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">npm install hexo-deployer-git --save</span></span><br></pre></td></tr></table></figure>

<p>修改<code> _config.yml</code>文件末尾的 Deployment 部分，修改成如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:用户名/用户名.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>使用以下命令进行部署：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">npx hexo deploy</span></span><br></pre></td></tr></table></figure>



<h2 id="6-在GitHub设置Page"><a href="#6-在GitHub设置Page" class="headerlink" title="6.在GitHub设置Page"></a>6.在GitHub设置Page</h2><p>打开刚才创建的仓库可以看到已经添加了一些文件：</p>
<p><img src="https://s2.loli.net/2022/03/06/NIkXl3ZCqKQoLyH.png" alt="image-20220306155326068"></p>
<p>在<code>Settings</code>里的<code>Pages</code>选项中将<code>source</code>设置为<code>master</code>（笔者在推送后GitHub已经自动设置为GitHub Pages）：</p>
<p><img src="https://s2.loli.net/2022/03/06/v3H7kGxy9ntwAWE.png" alt="image-20220306155511038"></p>
<p>最后在浏览器里访问<code>https://github账户名.github.io</code>，出现如下结果即为部署成功：</p>
<p><img src="https://s2.loli.net/2022/03/06/mvJCetqU4ElPisk.png" alt="image-20220306155832968"></p>
<h2 id="7-信息修改（可选）"><a href="#7-信息修改（可选）" class="headerlink" title="7.信息修改（可选）"></a>7.信息修改（可选）</h2><p>修改<code> _config.yml</code>文件中的一些信息，包括网站信息、作者信息等</p>
<h2 id="8-安装主题（可选）"><a href="#8-安装主题（可选）" class="headerlink" title="8.安装主题（可选）"></a>8.安装主题（可选）</h2><p>笔者使用的是<code>Next</code>主题：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure>

<p>修改<code> _config.yml</code>文件中的<code>theme</code>信息:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>



<h2 id="9-安装插件（可选）"><a href="#9-安装插件（可选）" class="headerlink" title="9.安装插件（可选）"></a>9.安装插件（可选）</h2><h3 id="9-1-本地搜索插件"><a href="#9-1-本地搜索插件" class="headerlink" title="9.1.本地搜索插件"></a>9.1.本地搜索插件</h3><p>添加本地搜索插件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">npm install hexo-generator-searchdb --save</span></span><br></pre></td></tr></table></figure>

<p>编辑 <strong>站点配置文件</strong>（网站的<code>_config.yml</code>），新增以下内容到任意位置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<p>编辑 <strong>主题配置文件</strong>（主题的<code>_config.yml</code>），启用本地搜索功能：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h3 id="9-2-MathJax数学公式"><a href="#9-2-MathJax数学公式" class="headerlink" title="9.2.MathJax数学公式"></a>9.2.MathJax数学公式</h3><p>编辑 <strong>主题配置文件</strong>主题的<code>_config.yml</code>）， 将 <code>mathjax</code> 下的 <code>enable</code> 设定为 <code>true</code> 即可。 <code>cdn</code> 用于指定 MathJax 的脚本地址，默认是 MathJax 官方提供的 CDN 地址</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># MathJax Support</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">cdn:</span> <span class="string">//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span></span><br></pre></td></tr></table></figure>



<h3 id="9-3-字数统计与阅读时间"><a href="#9-3-字数统计与阅读时间" class="headerlink" title="9.3.字数统计与阅读时间"></a>9.3.字数统计与阅读时间</h3><p>安装统计插件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">npm install hexo-wordcount --save</span></span><br></pre></td></tr></table></figure>

<p>在主题配置<code>_config.yml</code>里修改：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></span><br><span class="line"><span class="attr">post_wordcount:</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">totalcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h2 id="10-修改主题样式（可选）"><a href="#10-修改主题样式（可选）" class="headerlink" title="10.修改主题样式（可选）"></a>10.修改主题样式（可选）</h2><p>修改<code>theme</code>下对于主题下的<code> _config.yml</code>文件中的一些信息以定制样式</p>
<h2 id="11-参考资料"><a href="#11-参考资料" class="headerlink" title="11.参考资料"></a>11.参考资料</h2><p><a href="https://pages.github.com/">GitHub Pages | Websites for you and your projects, hosted directly from your GitHub repository. Just edit, push, and your changes are live.</a></p>
<p><a href="https://hexo.io/docs/">Documentation | Hexo</a></p>
<p><a href="http://theme-next.iissnan.com/">NexT 使用文档 (iissnan.com)</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/60578464">使用 Hexo+GitHub 搭建个人免费博客教程（小白向） - 知乎 (zhihu.com)</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/424930588">Next主题设置 - 知乎 (zhihu.com)</a></p>
]]></content>
  </entry>
</search>
